// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Hosting;

namespace JwtWork.PISDB.Models;

public partial class JWTPISContext : DbContext
{


    public virtual DbSet<FileCategory> FileCategory { get; set; }

    public virtual DbSet<FileSubCategory> FileSubCategory { get; set; }

    public virtual DbSet<PSItem> PSItem { get; set; }

    public virtual DbSet<PSItemLink> PSItemLink { get; set; }

    public virtual DbSet<PSJob> PSJob { get; set; }



    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<FileSubCategory>(entity =>
        {
            entity.HasOne(d => d.FileCategory).WithMany(p => p.FileSubCategory)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FileSubCategory_FileCategory");
        });

        modelBuilder.Entity<PSItem>(entity =>
        {
            entity.HasOne(d => d.PSJob).WithMany(p => p.PSItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PSItem_PSJob");
        });

        modelBuilder.Entity<PSItemLink>(entity =>
        {
            entity.HasOne(d => d.FileCategory).WithMany(p => p.PSItemLink)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PSItemLink_FileCategory");

            entity.HasOne(d => d.FileSubCategory).WithMany(p => p.PSItemLink)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PSItemLink_FileSubCategory");

            entity.HasOne(d => d.PSItem).WithMany(p => p.PSItemLink)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PSItemLink_PSItem");
        });

        modelBuilder.Entity<PSJob>(entity =>
        {
            entity.Property(e => e.CompleteYear).HasDefaultValueSql("((0))");
            entity.Property(e => e.MeterSpanLen).HasDefaultValueSql("((0))");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}

